#!/bin/bash -e

cd "$(dirname "$0")"

usage() {
	echo \
"base_builder

Base Builder wraps up all the commands to create a box for Vagrant to use just from the defs.

Usage: $0 [options]

Options:
    --proxy=http://proxy[:port]/
    --mirror=http://example.com/foo"

	exit 1
}

message() {
	echo "========================================================"
	echo "$@"
	echo "========================================================"
}

error() {
	message "ERROR: $@"
	exit 1
}

# default config
proxy=''
mirror='http://mirror.aarnet.edu.au/pub/scientific/6/x86_64/os'
name=sl6
definition="$name"
vbox_version="$(VBoxManage -v | sed 's/_.*//g')"

# parse cli options
while true; do
	# quit parsing if we're out of options
	[[ -z "$1" ]] && break

	case "$1" in
		--proxy=*)
			proxy="${1#*=}"
			;;
		--mirror=*)
			mirror="${1#*=}"
			;;
		--help)
			usage
			;;
		*)
			usage
			;;
	esac

	# get next arg
	shift
done

message "Removing historic builds"
rm -f "$name".box
if vagrant box list | fgrep -xq -- "$name"; then
	message "Removing old box from Vagrant"
	vagrant box remove "$name"
fi

# replace the mirror place holder, it must always be replaced
e="s|%MIRROR%|$mirror|g"

# proxy not always set
if [[ -z $proxy ]]; then
	e="$e;s|%PROXY%||g"
else
	e="$e;s|%PROXY%|--proxy=$proxy|g"
fi

# cache VBoxGuestAdditions
additions="VBoxGuestAdditions_$vbox_version.iso"
dir=cache
if [[ ! -f "$dir/$additions" ]]; then
	message "Caching Virtual Box Guest Additions"
	url="http://download.virtualbox.org/virtualbox/$vbox_version/$additions"
	tmp="$additions.tmp"
	mkdir -p -- $dir
	(
		# save via a temporary file, if something barfs in wget "bash -e"
		# should ensure we exit ungracefully (what we want)
		cd -- "$dir"
		wget -c "$url" -O "$tmp" || error Failed to download Guest Additions
		mv -- "$tmp" "$additions"
	)
fi

# Create sendable version of virtualbox.sh
# wraps the binary guest additions .iso file inside the bash script
template=definitions/"$name"/virtualbox.sh.template
final=definitions/"$name"/virtualbox.sh
message "Creating virtualbox.sh"
# genuine entropy, chosen by fair dice roll
entropy=52f2ba301c2e5055c6d15d7db61fbe01f556f62903239c29f606dddfaef6a7b2
(
	# create version of script with marker containing our generated one
	sed "s/%MARKER%/$entropy/g" "$template"
   	# make sure bash stops, then put the marker in
	printf "\nexit\n$entropy\n"
   	# put the additions themselves in
	cat "$dir/$additions"
) > "$final.tmp"
mv -- "$final.tmp" "$final"

# create out real ks.cfg file
sed "$e" definitions/"$name"/ks.cfg.template > definitions/"$name"/ks.cfg

message "Building"
vagrant basebox build "$name"

message "Exporting"
sleep 5 # work around race condition where if you run export too quickly after build, it fails
vagrant basebox export "$name"

message "Adding to vagrant"
vagrant box add "$name" "$name".box
